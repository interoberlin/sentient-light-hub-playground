buildscript {
    ext {
        kotlinVersion = '1.2.20'
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'berlin.intero'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repo.eclipse.org/content/repositories/paho-releases/'
    }
}


dependencies {
    // compile("com.intel:tinyb:0.5.0")
    compile('org.springframework.boot:spring-boot-starter')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    compile('commons-io:commons-io:2.5')
    compile('log4j:log4j:1.2.17')
    compile('com.google.code.gson:gson:2.7')

    compile('org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}
